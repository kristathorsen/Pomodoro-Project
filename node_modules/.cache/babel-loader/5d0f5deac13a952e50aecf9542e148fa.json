{"ast":null,"code":"var _jsxFileName = \"/Users/kristathorsen/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Focus.js\";\nimport React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Focus({\n  focusDuration,\n  setFocusDuration,\n  isTimerRunning\n}) {\n  const handleFocusDurationDecrease = event => {\n    setFocusDuration(Math.max(focusDuration - 1, 5));\n  };\n\n  const handleFocusDurationIncrease = event => {\n    setFocusDuration(Math.min(focusDuration + 5, 60));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleFocusDurationDecrease,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handleFocusDurationIncrease,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }))));\n}\n\nexport default Focus;","map":{"version":3,"sources":["/Users/kristathorsen/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Focus.js"],"names":["React","minutesToDuration","Focus","focusDuration","setFocusDuration","isTimerRunning","handleFocusDurationDecrease","event","Math","max","handleFocusDurationIncrease","min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,gBAAhB;AAAkCC,EAAAA;AAAlC,CAAf,EAAkE;AAE9D,QAAMC,2BAA2B,GAAIC,KAAD,IAAW;AAC3CH,IAAAA,gBAAgB,CAACI,IAAI,CAACC,GAAL,CAAUN,aAAa,GAAG,CAA1B,EAA8B,CAA9B,CAAD,CAAhB;AACD,GAFH;;AAIE,QAAMO,2BAA2B,GAAIH,KAAD,IAAW;AAC7CH,IAAAA,gBAAgB,CAACI,IAAI,CAACG,GAAL,CAAUR,aAAa,GAAG,CAA1B,EAA8B,EAA9B,CAAD,CAAhB;AACD,GAFD;;AAIF,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBF,iBAAiB,CAACE,aAAD,CAFpC,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAIG,2BAJb;AAKE,IAAA,QAAQ,EAAED,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEK,2BAJX;AAKE,IAAA,QAAQ,EAAEL,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,CALJ,CADJ;AA8BH;;AAED,eAAeH,KAAf","sourcesContent":["import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\"\n\nfunction Focus({focusDuration, setFocusDuration, isTimerRunning}) {\n    \n    const handleFocusDurationDecrease = (event) => { \n        setFocusDuration(Math.max((focusDuration - 1), 5))\n      }\n    \n      const handleFocusDurationIncrease = (event) => {\n        setFocusDuration(Math.min((focusDuration + 5), 60))\n      }\n\n    return (\n        <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick = {handleFocusDurationDecrease}\n                disabled={isTimerRunning}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={handleFocusDurationIncrease}\n                disabled={isTimerRunning}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n    )\n}\n\nexport default Focus;"]},"metadata":{},"sourceType":"module"}