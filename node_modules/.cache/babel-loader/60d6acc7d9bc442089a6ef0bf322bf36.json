{"ast":null,"code":"var _jsxFileName = \"/Users/kristathorsen/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveSession.js\";\nimport React, { useState } from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction ActiveSession({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  if (session === null) {\n    return null;\n  }\n\n  const currentTimer = session.label === \"Focusing\" ? focusDuration : breakDuration;\n  const percent = (currentTimer * 60 - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / (currentTimer * 60) * 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", minutesToDuration(currentTimer), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${percent}`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default ActiveSession;","map":{"version":3,"sources":["/Users/kristathorsen/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveSession.js"],"names":["React","useState","minutesToDuration","secondsToDuration","ActiveSession","session","focusDuration","breakDuration","currentTimer","label","percent","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;;AAEA,SAASC,aAAT,CAAuB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAAvB,EAAgE;AAC5D,MAAIF,OAAO,KAAK,IAAhB,EAAsB;AAClB,WAAO,IAAP;AACH;;AAED,QAAMG,YAAY,GAAIH,OAAO,CAACI,KAAR,KAAkB,UAAlB,GAA+BH,aAA/B,GAA+CC,aAArE;AACA,QAAMG,OAAO,GAAI,CAACF,YAAY,GAAG,EAAf,IAAoBH,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEM,aAA7B,CAAD,KAA8CH,YAAY,GAAG,EAA7D,CAAD,GAAqE,GAArF;AAEA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OADH,aACGA,OADH,uBACGA,OAAO,CAAEI,KADZ,WACwBP,iBAAiB,CAACM,YAAD,CADzC,aAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEM,aAAV,CADpB,eANF,CADN,CADA,eAaI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeF,OALjB,CAK0B;AAL1B;AAME,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAG,GAAEH,OAAQ;AAApB,KANT,CAMgC;AANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAbJ,CADA;AA8BH;;AAED,eAAeN,aAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\n\nfunction ActiveSession({session, focusDuration, breakDuration}) {\n    if (session === null) {\n        return null\n    }\n\n    const currentTimer = (session.label === \"Focusing\" ? focusDuration : breakDuration)\n    const percent = ((currentTimer * 60 - session?.timeRemaining)/(currentTimer * 60)) * 100\n\n    return (\n    <div>\n    <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {session?.label} for {minutesToDuration(currentTimer)} minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={percent} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${percent}`}}// TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n        </div>\n    )\n}\n\nexport default ActiveSession;"]},"metadata":{},"sourceType":"module"}